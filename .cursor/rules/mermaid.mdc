---
description: 
globs: 
alwaysApply: false
---
# Mermaid 图表编写规范

Mermaid是一种用于创建图表和可视化的工具，可直接在Markdown文件中使用。以下规范旨在确保Mermaid图表在各种环境中都能正确渲染。

## 基本规则

- 图表代码块使用 ````mermaid` 和 ```` 包围
- 每个Mermaid图表应独立成段，前后各有一个空行
- 图表定义应遵循自上而下或自左而右的逻辑流
- 保持图表整洁，避免过于复杂的结构

## 初始化配置

- 在图表开头添加初始化配置，以提高可读性和适配性：

```mermaid
%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '14px'}, 'flowchart': {'useMaxWidth': true, 'htmlLabels': true, 'curve': 'linear'} } }%%
```

## 语法规范

- **避免行末分号**：虽然语法上允许，但为避免解析错误，建议省略行末分号
  ```
  // 不推荐
  A --> B;
  
  // 推荐
  A --> B
  ```

- **子图（subgraph）格式**：
  - 子图标题必须用引号括起来，特别是包含空格或特殊字符时
  - 确保end标记与subgraph缩进一致
  
  ```
  // 不推荐
  subgraph 处理流程 (Process Flow)
    A --> B
  end
  
  // 推荐
  subgraph "处理流程 (Process Flow)"
    A --> B
  end
  ```
- **节点定义**：
  - 节点ID（如A、B）应简单明了，避免特殊字符
  - 节点文本使用方括号包围：`A[普通节点]`
  - 包含特殊字符或标点的节点文本需使用引号：`B["特殊'节点"]`
  - 数据节点使用圆括号：`C[("数据节点")]`
  
- **连接线样式**：
  - 使用明确的连接样式（如 `-->`, `---`, `-.->` 等）
  - 连接标签简洁明了：`A -- "标签" --> B`

## 常见错误与解决方案

- **解析错误**：
  - 检查特殊字符是否需要转义或引号包围
  - 确认subgraph语法正确
  - 验证节点定义格式，特别是含特殊符号时

- **渲染问题**：
  - 减少图表复杂度，考虑拆分为多个图表
  - 使用适当的方向（TD、LR等）提高可读性
  - 调整节点间距和布局

- **调试方法**：
  - 逐步构建复杂图表，先确保基本结构可渲染
  - 使用[Mermaid Live Editor](https://mermaid.live/)在提交前验证
  - 出现问题时尝试简化表达方式

## 示例

```mermaid
%%{init: {'theme': 'default'}}%%
graph TD
    A[正确节点] --> B["带引号的'节点'"]
    A --> C[简单节点]
    
    subgraph "正确的子图示例"
        C --> D[子节点]
        D --> E{判断节点}
    end
    
    C -.-> F[("数据存储")]
    E -- 是 --> G[结果1]
    E -- 否 --> H[结果2]
``` 
